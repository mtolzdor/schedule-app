// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id            String       @id @default(cuid())
    name          String?
    email         String       @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    groups        UserGroups[]
    shifts        Shift[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Group {
    id    String       @id @default(cuid())
    name  String       @unique
    email String?
    Shift Shift[]
    users UserGroups[]
}

model UserGroups {
    user     User   @relation(fields: [userId], references: [id])
    userId   String
    group    Group  @relation(fields: [groupId], references: [id])
    groupId  String
    userRole String

    @@id([userId, groupId])
    @@index([userId])
    @@index([groupId])
}

model Shift {
    id        String   @id @default(cuid())
    startDate DateTime
    endDate   DateTime
    Group     Group    @relation(fields: [groupId], references: [id])
    groupId   String
    User      User?    @relation(fields: [userId], references: [id])
    userId    String?

    @@index([groupId])
    @@index([userId])
}
